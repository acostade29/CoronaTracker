{"version":3,"sources":["components/NavBar/NavBar.jsx","services/tokenService.js","services/userService.js","pages/LoginPage/LoginPage.jsx","components/SignupForm/SignupForm.jsx","pages/SignupPage/SignupPage.jsx","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","services/comments-api.js","components/CommentsCard/CommentsCard.jsx","pages/CommentListPage/CommentListPage.jsx","pages/AddCommentPage/AddCommentPage.jsx","pages/App/App.js","serviceWorker.js","index.js","components/Cards/Cards.module.css","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/images/covidimage2.png"],"names":["NavBar","user","handleLogout","nav","className","href","src","height","alt","border","id","onClick","name","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","getUserFromToken","removeToken","signup","fetch","BASE_URL","method","headers","Headers","body","stringify","then","res","ok","json","Error","tokenService","getUser","logout","login","creds","LoginPage","state","email","pw","handleChange","e","setState","target","value","handleSubmit","a","preventDefault","userService","props","handleSignupOrLogin","history","push","alert","autocomplete","onSubmit","this","type","onChange","htmlFor","class","to","Component","SignupForm","password","passwordConf","updateMessage","message","disabled","isFormInvalid","SignupPage","msg","Cards","data","confirmed","recovered","deaths","lastUpdate","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","toDateString","url","fetchData","country","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","Chart","useState","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","FormControl","NativeSelect","defaultValue","i","key","getAll","mode","create","comment","deleteOne","idx","CommentCard","handleDeleteComment","owner","_id","CommentListPage","comments","handleDeleteCat","commentAPI","filter","c","AddCommentPage","invalidForm","formData","formRef","React","createRef","handleAddComment","current","checkValidity","ref","autoComplete","required","App","fetchedData","newCommentData","newComment","p","exact","path","render","image","coronaImage","location","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","module","exports"],"mappings":"+WAwCeA,G,OAtCA,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAChBC,EAAMF,EACV,oCACI,6BACI,yBAAKG,UAAU,eACX,uBAAGA,UAAU,QAAQC,KAAK,KAAI,yBAAKC,IAAI,6EAA6EC,OAAO,KAAKC,IAAI,eAAeC,OAAO,OAC1J,wBAAIC,GAAG,aAAaN,UAAU,SAC1B,4BAAI,uBAAGA,UAAU,aAAaC,KAAK,aAA/B,aACJ,4BAAI,uBAAGD,UAAU,aAAaC,KAAK,mBAA/B,mBACJ,4BAAI,uBAAGA,KAAK,IAAID,UAAU,WAAWO,QAAST,GAA1C,YACJ,4BAAI,uBAAGG,KAAK,IAAID,UAAU,YAAYH,EAAKW,WAQ3D,oCACA,6BACQ,yBAAKR,UAAU,eACf,uBAAGA,UAAU,QAAQC,KAAK,KAAI,yBAAKC,IAAI,6EAA6EC,OAAO,KAAKC,IAAI,eAAeC,OAAO,OACtJ,wBAAIC,GAAG,aAAaN,UAAU,SAC9B,4BAAI,uBAAGA,UAAU,aAAaC,KAAK,aAA/B,aACA,4BAAI,uBAAGA,KAAK,aAAY,uBAAGD,UAAU,6BAAb,UAExB,4BAAI,uBAAGC,KAAK,SAASD,UAAU,YAA3B,WACJ,4BAAI,uBAAGC,KAAK,UAAUD,UAAU,YAA5B,gBAKpB,OACA,oCACKD,K,uBCvBT,SAASU,IACP,IAAIC,EAAQC,aAAaC,QAAQ,SAC7BF,IAEcG,KAAKC,MAAMC,KAAKL,EAAMM,MAAM,KAAK,KAErCC,IAAMC,KAAKC,MAAQ,MAC7BR,aAAaS,WAAW,SACxBV,EAAQ,OAGZ,OAAOA,EAOM,OACXW,SAhCJ,SAAkBX,GACVA,EACFC,aAAaW,QAAQ,QAASZ,GAE9BC,aAAaS,WAAW,UA6B1BX,WACAc,iBA1BJ,WACE,IAAMb,EAAQD,IACd,OAAOC,EAAQG,KAAKC,MAAMC,KAAKL,EAAMM,MAAM,KAAK,KAAKnB,KAAO,MAyB1D2B,YARJ,WACIb,aAAaS,WAAW,WCeb,OACbK,OAzCF,SAAgB5B,GACd,OAAO6B,MAAMC,oBAAqB,CAChCC,OAAQ,OACRC,QAAS,IAAIC,QAAQ,CAAC,eAAgB,qBACtCC,KAAMlB,KAAKmB,UAAUnC,KAEtBoC,MAAK,SAAAC,GACJ,GAAIA,EAAIC,GAAI,OAAOD,EAAIE,OACvB,MAAM,IAAIC,MAAM,2BAGjBJ,MAAK,YAAgB,IAAbvB,EAAY,EAAZA,MACP4B,EAAajB,SAASX,OA8BxB6B,QAxBF,WACE,OAAOD,EAAaf,oBAwBpBiB,OArBF,WACEF,EAAad,eAqBbiB,MAlBF,SAAeC,GACb,OAAOhB,MAAMC,mBAAoB,CAC/BC,OAAQ,OACRC,QAAS,IAAIC,QAAQ,CAAC,eAAgB,qBACtCC,KAAMlB,KAAKmB,UAAUU,KAEtBT,MAAK,SAAAC,GAEJ,GAAIA,EAAIC,GAAI,OAAOD,EAAIE,OACvB,MAAM,IAAIC,MAAM,uBAEjBJ,MAAK,gBAAEvB,EAAF,EAAEA,MAAF,OAAa4B,EAAajB,SAASX,QCuB5BiC,E,4MAxDbC,MAAQ,CACNC,MAAO,GACPC,GAAI,I,EAGNC,aAAe,SAACC,GACd,EAAKC,SAAL,eAEGD,EAAEE,OAAO1C,KAAOwC,EAAEE,OAAOC,S,EAI9BC,a,uCAAe,WAAOJ,GAAP,SAAAK,EAAA,6DACbL,EAAEM,iBADW,kBAGLC,EAAYd,MAAM,EAAKG,OAHlB,OAKX,EAAKY,MAAMC,sBACX,EAAKD,MAAME,QAAQC,KAAK,KANb,gDASXC,MAAM,wBATK,yD,6GAcb,OACE,yBAAK5D,UAAU,aACb,sCACA,0BAAMA,UAAU,UAAU6D,aAAa,MAAMC,SAAUC,KAAKX,cAC1D,yBAAKpD,UAAU,OACb,yBAAKA,UAAU,uBACb,2BAAOgE,KAAK,OAAOH,aAAa,MAAMvD,GAAG,QAAQN,UAAU,SAASmD,MAAOY,KAAKnB,MAAMC,MAAOrC,KAAK,QAAQyD,SAAUF,KAAKhB,eACzH,2BAAOmB,QAAQ,SAAf,WAIJ,yBAAKlE,UAAU,OACb,yBAAKA,UAAU,uBACb,2BAAOgE,KAAK,WAAWH,aAAa,MAAM7D,UAAU,SAASM,GAAG,WAAW6C,MAAOY,KAAKnB,MAAME,GAAItC,KAAK,KAAKyD,SAAUF,KAAKhB,eAC1H,2BAAOmB,QAAQ,YAAf,cAIJ,yBAAKlE,UAAU,OACb,yBAAKA,UAAU,WACb,4BAAQA,UAAU,aAAlB,SAAoC,uBAAGmE,MAAM,wBAAT,kBADtC,eAEE,kBAAC,IAAD,CAAMnE,UAAU,UAAUoE,GAAG,KAA7B,SAAuC,uBAAGD,MAAM,wBAAT,mB,GAjD7BE,aCyETC,E,4MAxEb1B,MAAQ,CACNpC,KAAM,GACNqC,MAAO,GACP0B,SAAU,GACVC,aAAc,I,EAGhBzB,aAAe,SAACC,GACd,EAAKQ,MAAMiB,cAAc,IACzB,EAAKxB,SAAL,eAEGD,EAAEE,OAAO1C,KAAOwC,EAAEE,OAAOC,S,EAI9BC,a,uCAAe,WAAOJ,GAAP,SAAAK,EAAA,6DACbL,EAAEM,iBADW,kBAGLC,EAAY9B,OAAO,EAAKmB,OAHnB,OAIX,EAAKY,MAAMC,sBACX,EAAKD,MAAME,QAAQC,KAAK,KALb,gDAQX,EAAKH,MAAMiB,cAAc,KAAIC,SARlB,yD,oHAab,QAASX,KAAKnB,MAAMpC,MAAQuD,KAAKnB,MAAMC,OAASkB,KAAKnB,MAAM2B,WAAaR,KAAKnB,MAAM4B,gB,+BAInF,OACE,6BACE,uCACA,0BAAMxE,UAAU,UAAU6D,aAAa,MAAMC,SAAUC,KAAKX,cAC1D,yBAAKpD,UAAU,OACb,yBAAKA,UAAU,uBACb,2BAAOgE,KAAK,OAAOH,aAAa,MAAM7D,UAAU,SAASM,GAAG,OAAO6C,MAAOY,KAAKnB,MAAMpC,KAAMA,KAAK,OAAOyD,SAAUF,KAAKhB,eACtH,2BAAOmB,QAAQ,QAAf,UAGJ,yBAAKlE,UAAU,OACb,yBAAKA,UAAU,uBACb,2BAAOgE,KAAK,OAAOH,aAAa,MAAM7D,UAAU,SAASM,GAAG,QAAQ6C,MAAOY,KAAKnB,MAAMC,MAAOrC,KAAK,QAAQyD,SAAUF,KAAKhB,eACzH,2BAAOmB,QAAQ,SAAf,WAGJ,yBAAKlE,UAAU,OACb,yBAAKA,UAAU,uBACb,2BAAOgE,KAAK,WAAWH,aAAa,MAAM7D,UAAU,SAASM,GAAG,WAAW6C,MAAOY,KAAKnB,MAAM2B,SAAU/D,KAAK,WAAWyD,SAAUF,KAAKhB,eACtI,2BAAOmB,QAAQ,YAAf,cAGJ,yBAAKlE,UAAU,OACb,yBAAKA,UAAU,uBACb,2BAAOgE,KAAK,WAAWH,aAAa,MAAM7D,UAAU,SAASM,GAAG,UAAU6C,MAAOY,KAAKnB,MAAM4B,aAAchE,KAAK,eAAeyD,SAAUF,KAAKhB,eAC7I,2BAAOmB,QAAQ,WAAf,sBAGJ,yBAAKlE,UAAU,cACb,yBAAKA,UAAU,yBACb,4BAAQA,UAAU,YAAY2E,SAAUZ,KAAKa,iBAA7C,UAAqE,uBAAGT,MAAM,wBAAT,eADvE,WAEE,kBAAC,IAAD,CAAMnE,UAAU,UAAUoE,GAAG,KAA7B,SAAuC,uBAAGD,MAAM,wBAAT,mB,GAjE5BE,aCoBVQ,G,yDAnBb,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IAIRiB,cAAgB,SAACK,GACf,EAAK7B,SAAS,CAACyB,QAASI,KAJxB,EAAKlC,MAAQ,CAAC8B,QAAS,IAFN,E,qDAUjB,OACE,yBAAK1E,UAAU,cACb,kBAAC,EAAD,iBAAgB+D,KAAKP,MAArB,CAA4BiB,cAAeV,KAAKU,iBAChD,2BAAIV,KAAKnB,MAAM8B,c,GAdEL,c,uFC+CTU,EA3CH,SAAC,GAAyD,IAAD,IAAvDC,KAAOC,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,OAASC,EAAiB,EAAjBA,WACjD,OAAKH,EAID,yBAAKjF,UAAWqF,IAAOC,WACtB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UACpC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAG9F,UAAW+F,IAAGV,IAAOW,KAAMX,IAAOY,WACzE,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKvB,EAAU9B,MAAOsD,SAAU,IAAKC,UAAU,OAEtE,kBAACP,EAAA,EAAD,CAAYC,MAAM,iBAAlB,IAAqC,IAAIlF,KAAKkE,GAAYuB,eAA1D,KACA,kBAACR,EAAA,EAAD,CAAYG,QAAQ,SAApB,wCAGJ,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAG9F,UAAW+F,IAAGV,IAAOW,KAAMX,IAAOH,YAC7E,kBAACgB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKtB,EAAU/B,MAAOsD,SAAU,IAAKC,UAAU,OAEtE,kBAACP,EAAA,EAAD,CAAYC,MAAM,iBAAlB,IAAqC,IAAIlF,KAAKkE,GAAYuB,eAA1D,KACA,kBAACR,EAAA,EAAD,CAAYG,QAAQ,SAApB,yCAGJ,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAG9F,UAAW+F,IAAGV,IAAOW,KAAMX,IAAOF,SAC7E,kBAACe,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKrB,EAAOhC,MAAOsD,SAAU,IAAKC,UAAU,OAEnE,kBAACP,EAAA,EAAD,CAAYC,MAAM,iBAAlB,IAAqC,IAAIlF,KAAKkE,GAAYuB,eAA1D,KACA,kBAACR,EAAA,EAAD,CAAYG,QAAQ,SAApB,0CAhCF,c,iCCNTM,EAAM,iCAECC,EAAS,uCAAG,WAAOC,GAAP,2BAAAzD,EAAA,6DACnB0D,EAAgBH,EAEjBE,IACDC,EAAa,UAAMH,EAAN,sBAAuBE,IAJf,kBAUkDE,IAAMC,IAAIF,GAV5D,2BAUT/B,KAAOC,EAVE,EAUFA,UAAWC,EAVT,EAUSA,UAAWC,EAVpB,EAUoBA,OAAQC,EAV5B,EAU4BA,WAV5B,kBAYV,CAAEH,YAAWC,YAAWC,SAAOC,eAZrB,kCAgBnB8B,QAAQC,IAAR,MAhBmB,0DAAH,sDAsBTC,EAAc,uCAAG,gCAAA/D,EAAA,+EAED2D,IAAMC,IAAN,UAAaL,EAAb,WAFC,uBAEhB5B,EAFgB,EAEhBA,KAEFqC,EAAerC,EAAKsC,KAAI,SAACC,GAAD,MAAgB,CAC5CtC,UAAWsC,EAAUtC,UAAUuC,MAC/BrC,OAAQoC,EAAUpC,OAAOqC,MACzBC,KAAMF,EAAUG,eAPM,kBAUnBL,GAVmB,gCAa1BH,QAAQC,IAAR,MAb0B,yDAAH,qDAkBdQ,EAAc,uCAAG,8BAAAtE,EAAA,+EAEc2D,IAAMC,IAAN,UAAaL,EAAb,eAFd,uBAERgB,EAFQ,EAEhB5C,KAAQ4C,UAFQ,kBAGjBA,EAAUN,KAAI,SAACR,GAAD,OAAaA,EAAQtG,SAHlB,gCAKxB0G,QAAQC,IAAR,MALwB,yDAAH,qD,iBCyBZU,EAhED,SAAC,GAAyD,IAAD,IAAtD7C,KAAQC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAU2B,EAAc,EAAdA,QAAc,EACnCgB,mBAAS,IAD0B,mBAC9DP,EAD8D,KACnDQ,EADmD,KAGrEC,qBAAU,YACQ,uCAAG,4BAAA3E,EAAA,sEACc+D,IADd,OACXa,EADW,OAGjBF,EAAaE,GAHI,2CAAH,qDAMhBC,KACC,IAEH,IAAMC,EACJlD,EACE,kBAAC,IAAD,CACED,KAAM,CACJoD,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CACR,CACEC,MAAO,SACPC,gBAAiB,CAAC,uBAAwB,uBAAwB,wBAClEvD,KAAM,CAACC,EAAU9B,MAAO+B,EAAU/B,MAAOgC,EAAOhC,UAItDqF,QAAS,CACPC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CAAED,SAAS,EAAME,KAAK,oBAAD,OAAsB9B,OAGpD,KAGA+B,EACJtB,EAAU,GACR,kBAAC,IAAD,CACEvC,KAAM,CACJoD,OAAQb,EAAUD,KAAI,qBAAGG,QACzBY,SAAU,CAAC,CACTrD,KAAMuC,EAAUD,KAAI,SAACtC,GAAD,OAAUA,EAAKC,aACnCqD,MAAO,WACPQ,YAAa,UACbC,MAAM,GACL,CACD/D,KAAMuC,EAAUD,KAAI,SAACtC,GAAD,OAAUA,EAAKG,UACnCmD,MAAO,SACPQ,YAAa,MACbP,gBAAiB,uBACjBQ,MAAM,OAKV,KAGN,OACE,yBAAK/I,UAAWqF,IAAOC,WACpBwB,EAAUqB,EAAWU,I,mCCpCbG,EAvBO,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAA0B,EACCnB,mBAAS,IADV,mBACxCoB,EADwC,KACtBC,EADsB,KAa/C,OAVAnB,qBAAU,YACM,uCAAG,sBAAA3E,EAAA,kEACb8F,EADa,SACaxB,IADb,6EAAH,qDAIdyB,KACC,CAACD,IAKD,kBAACE,EAAA,EAAD,CAAarJ,UAAWqF,IAAOgE,aAC3B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGtF,SAAU,SAACjB,GAAD,OAAOiG,EAAoBjG,EAAEE,OAAOC,SACxE,4BAAQA,MAAM,IAAd,UACC+F,EAAiB5B,KAAI,SAACR,EAAS0C,GAAV,OAAgB,4BAAQC,IAAKD,EAAGrG,MAAO2D,GAAvB,IAAmCA,EAAnC,W,qCCrB9C,SAAS4C,KACd,IAAMlB,EAAU,CACd5G,OAAQ,MACRC,QAAS,CACP,cAAiB,UAAYS,EAAa7B,aAG9C,OAAOiB,MATQ,gBASQ8G,EAAS,CAACmB,KAAM,SACtC1H,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAGZ,SAASwH,GAAOC,GAErB,OADA3C,QAAQC,IAAI0C,GACLnI,MAfQ,gBAeQ,CACrBE,OAAQ,OACRC,QAAS,CAAC,eAAgB,mBAAoB,cAAiB,UAAYS,EAAa7B,YACxFsB,KAAMlB,KAAKmB,UAAU6H,IACpB,CAACF,KAAM,SAAS1H,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAG9B,SAAS0H,GAAUC,GACxB,OAAOrI,MAAM,GAAD,OAvBG,gBAuBH,YAAgBqI,GAAO,CACjCnI,OAAQ,SACRC,QAAS,CACP,cAAiB,UAAYS,EAAa7B,aAE3C,CAACkJ,KAAM,SAAS1H,MAAK,SAAAC,GAAG,OAAIA,EAAIE,U,OCMtB4H,OA/Bf,YAAiE,IAA3CH,EAA0C,EAA1CA,QAASI,EAAiC,EAAjCA,oBAAqBpK,EAAY,EAAZA,KAAMkK,EAAM,EAANA,IACtD,OAEI,yBAAK/J,UAAU,uBACX,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,eAAe6J,EAAQrJ,OAEzC,yBAAKR,UAAU,cACX,4BACI,uCACA,4BAAK6J,EAAQrJ,QAKrB,yBAAKR,UAAU,gBAEV6J,EAAQK,QAAUrK,EAAKW,KACxB,4BACIR,UAAU,uCACVO,QAAS,kBAAM0J,EAAoBJ,EAAQM,IAAKJ,KAFpD,UAOA,wCCaDK,G,4MAnCXxH,MAAQ,CACJyH,SAAU,I,EAQdC,gB,uCAAkB,WAAOhK,EAAIyJ,GAAX,SAAA1G,EAAA,sEACRkH,GAAqBR,GADb,OAEd,EAAK9G,UAAS,SAAAL,GAAK,MAAK,CACpByH,SAAUzH,EAAMyH,SAASG,QAAO,SAAAC,GAAC,OAAIA,EAAEN,MAAQ7J,SAC/C,kBAAM,EAAKkD,MAAME,QAAQC,KAAK,gBAJpB,2C,0PAJS4G,K,OAAjBF,E,OACNtG,KAAKd,SAAS,CAACoH,a,qIAUT,IAAD,OACL,OACI,oCACI,gDACA,yBAAKrK,UAAU,wBACV+D,KAAKnB,MAAMyH,SAAS/C,KAAI,SAACuC,EAASE,GAAV,OACrB,kBAAC,GAAD,CACIN,IAAKI,EAAQM,IACbJ,IAAKA,EACLF,QAASA,EACThK,KAAM,EAAK2D,MAAM3D,KACjBoK,oBAAqB,EAAKA,+B,GA5BxB5F,a,SCgDfqG,G,4MAnDb9H,MAAQ,CACN+H,aAAa,EACbC,SAAU,CACRpK,KAAM,K,EAKVqK,QAAUC,IAAMC,Y,EAEhB3H,aAAe,SAAAJ,GACbA,EAAEM,iBACF,EAAKE,MAAMwH,iBAAiB,EAAKpI,MAAMgI,W,EAGzC7H,aAAe,SAAAC,GACb,IAAM4H,EAAQ,6BAAO,EAAKhI,MAAMgI,UAAlB,kBAA6B5H,EAAEE,OAAO1C,KAAOwC,EAAEE,OAAOC,QACpE,EAAKF,SAAS,CACZ2H,WACAD,aAAc,EAAKE,QAAQI,QAAQC,mB,uDAKrC,OACE,oCACE,2CACA,0BAAMC,IAAKpH,KAAK8G,QAASO,aAAa,MAAMtH,SAAUC,KAAKX,cACzD,yBAAKpD,UAAU,cACb,+DACA,2BACEA,UAAU,eACVQ,KAAK,OACL2C,MAAOY,KAAKnB,MAAMgI,SAASpK,KAC3ByD,SAAUF,KAAKhB,aACfsI,UAAQ,KAIZ,4BACErH,KAAK,SACLhE,UAAU,MACV2E,SAAUZ,KAAKnB,MAAM+H,aAHvB,c,GAxCmBtG,aCiKdiH,G,4MAhIb1I,MAAQ,CACN/C,KAAM0D,EAAYhB,UAClByC,KAAM,GACNqF,SAAU,I,EAGZvK,aAAe,WACbyD,EAAYf,SACZ,EAAKS,SAAS,CAAEpD,KAAM,Q,EAGxB4D,oBAAsB,WACpB,EAAKR,SAAS,CAACpD,KAAM0D,EAAYhB,a,EAMrC0G,oB,uCAAsB,WAAOnC,GAAP,eAAAzD,EAAA,sEACQwD,EAAUC,GADlB,OACZyE,EADY,OAElB,EAAKtI,SAAS,CAAE+B,KAAMuG,EAAazE,QAASA,IAF1B,2C,wDAOtBkE,iB,uCAAmB,WAAMQ,GAAN,eAAAnI,EAAA,sEACQkH,GAAkBiB,GAD1B,OACXC,EADW,OAEjB,EAAKxI,UAAS,SAAAL,GAAK,MAAK,CACtByH,SAAS,GAAD,mBAAMzH,EAAMyH,UAAZ,CAAsBoB,QAC5B,kBAAM,EAAKjI,MAAME,QAAQC,KAAK,QAJjB,2C,wDAOnBsG,oB,uCAAqB,WAAM3J,GAAN,SAAA+C,EAAA,sEACbkH,GAAqBjK,GADR,OAEnB,EAAK2C,UAAS,SAAAL,GAAK,MAAK,CACtByH,SAAUzH,EAAMyH,SAASG,QAAO,SAAAkB,GAAC,OAAIA,EAAEvB,MAAQ7J,SAC7C,kBAAM,EAAKkD,MAAME,QAAQC,KAAK,QAJf,2C,0PAQOkD,I,cAApB0E,E,OACNxH,KAAKd,SAAS,CAAE+B,KAAMuG,I,SACChB,K,OAAjBF,E,OACNtG,KAAKd,SAAS,CAACoH,a,qIAKJ,IAAD,SAEkBtG,KAAKnB,MAAvBoC,EAFA,EAEAA,KAAM8B,EAFN,EAEMA,QAEd,OACE,oCACE,kBAAC,EAAD,CACEjH,KAAMkE,KAAKnB,MAAM/C,KACjBC,aAAciE,KAAKjE,eAErB,kBAAC,IAAD,CAAO6L,OAAK,EAACC,KAAK,UAAUC,OAAQ,gBAAGnI,EAAH,EAAGA,QAAH,OAClC,kBAAC,EAAD,CACEA,QAASA,EACTD,oBAAqB,EAAKA,yBAG9B,kBAAC,IAAD,CAAOkI,OAAK,EAACC,KAAK,SAASC,OAAQ,gBAAGnI,EAAH,EAAGA,QAAH,OACjC,kBAAC,EAAD,CACEA,QAASA,EACTD,oBAAqB,EAAKA,yBAMhC,yBAAKzD,UAAWqF,IAAOC,WACjB,yBAAKtF,UAAWqF,IAAOyG,MAAO5L,IAAK6L,KAAa3L,IAAI,aACjD,kBAAC,EAAD,CAAO4E,KAAMA,IACb,kBAAC,EAAD,CAAeiE,oBAAqBlF,KAAKkF,sBACzC,kBAAC,EAAD,CAAOjE,KAAMA,EAAO8B,QAASA,KAOpC,kBAAC,IAAD,CAAO6E,OAAK,EAACC,KAAK,YAAYC,OAAQ,gBAAEnI,EAAF,EAAEA,QAASsI,EAAX,EAAWA,SAAX,OAClC,kBAAC,GAAD,CACA3B,SAAU,EAAKzH,MAAMyH,SACrBxK,KAAM,EAAK+C,MAAM/C,KACjB6D,QAASA,EACTsI,SAAUA,OAMZ,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,kBAAkBC,OAAQ,kBAC1C,kBAAC,GAAD,CACEb,iBAAoB,EAAKA,2B,GAlGrB3G,aCtBE4H,QACW,cAA7BC,OAAOF,SAASG,UAEe,UAA7BD,OAAOF,SAASG,UAEhBD,OAAOF,SAASG,SAASC,MACvB,2DCXNC,IAASR,OACP,kBAAC,IAAD,KACE,kBAAC,IAAMS,WAAP,KACE,kBAAC,IAAD,CAAOT,OAAQ,gBAAEnI,EAAF,EAAEA,QAAF,OAAe,kBAAC,GAAD,CAAKA,QAASA,SAGhD6I,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1K,MAAK,SAAA2K,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7F,QAAQ6F,MAAMA,EAAMrI,a,mBExI5BsI,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,mBCAnKD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCA7DD,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,qC,mBCDhCD,EAAOC,QAAU,IAA0B,0C","file":"static/js/main.51bbe4be.chunk.js","sourcesContent":["import React from 'react';\n\nconst NavBar = ({ user, handleLogout }) => {\n    let nav = user ?\n    <>\n        <nav>\n            <div className=\"nav-wrapper\">\n                <a className=\" left\" href=\"/\"><img src=\"https://fontmeme.com/permalink/200717/845966a1dcfd9aca5cafe8e5e408a676.png\" height='20' alt=\"netflix-font\" border=\"0\"/></a>\n                <ul id=\"nav-mobile\" className=\"right\">\n                    <li><a className=\"nav-link-a\" href=\"/comments\">Comments</a></li>\n                    <li><a className=\"nav-link-a\" href=\"/AddCommentPage\"> add a comment</a></li>\n                    <li><a href=\" \" className=\"nav-link\" onClick={handleLogout}>Log Out</a></li>\n                    <li><a href=\" \" className=\"nav-link\">{user.name}</a></li>\n                    {/* <li><a className=\"nav-link-b\" href=\"/search\">Search</a></li><i className=\"material-icons left small\">search</i> */}\n                </ul>\n            </div>\n        </nav>\n    </>\n    :\n\n    <>\n    <nav>\n            <div className=\"nav-wrapper\">\n            <a className=\" left\" href=\"/\"><img src=\"https://fontmeme.com/permalink/200717/845966a1dcfd9aca5cafe8e5e408a676.png\" height='20' alt=\"netflix-font\" border=\"0\"/></a>\n                <ul id=\"nav-mobile\" className=\"right\">\n                <li><a className=\"nav-link-a\" href=\"/comments\">Comments</a></li>\n                    <li><a href=\"/comments\"><i className=\"material-icons left small\">note</i></a></li>\n                    {/* <li><a className=\"nav-link-b\" href=\"/search\">Search</a></li><i className=\"material-icons left small\">search</i> */}\n                    <li><a href=\"/login\" className=\"nav-link\">Log In</a></li>\n                    <li><a href=\"/signup\" className=\"nav-link\">Sign Up</a></li>\n                    </ul>\n            </div>\n        </nav>\n    </>\n    return (\n    <>\n        {nav}\n    </>\n    )\n}\nexport default NavBar;","function setToken(token) {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    } \n  }\n  \nfunction getUserFromToken () {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n}\n\nfunction getToken() {\n  let token = localStorage.getItem('token');\n  if (token) {\n    // Check if expired, remove if it is\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem('token');\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction removeToken() {\n    localStorage.removeItem('token');\n}\n\nexport default {\n    setToken,\n    getToken,\n    getUserFromToken,\n    removeToken,\n  };","import tokenService from '../services/tokenService';\nconst BASE_URL = '/api/users/';\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    throw new Error('Email already taken!');\n  })\n  // Parameter destructuring!\n  .then(({ token }) => {\n    tokenService.setToken(token);\n  });\n  // the above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  login\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './LoginPage.css';\nimport userService from '../../services/userService';\n\nclass LoginPage extends Component {\n  \n  state = {\n    email: '',\n    pw: ''\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      // Using ES2015 Computed Property Names\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await userService.login(this.state);\n      // Let <App> know a user has signed up!\n      this.props.handleSignupOrLogin();\n      this.props.history.push('/');\n    } catch (err) {\n      // Use a modal or toast in your apps instead of alert\n      alert('Invalid Credentials!');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"LoginPage\">\n        <h3>Log In</h3>\n        <form className=\"col s12\" autocomplete=\"off\" onSubmit={this.handleSubmit} >\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"text\" autocomplete=\"off\" id=\"email\" className=\"active\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n              <label htmlFor=\"email\">Email</label>\n\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"password\" autocomplete=\"off\" className=\"active\" id=\"password\" value={this.state.pw} name=\"pw\" onChange={this.handleChange} />\n              <label htmlFor=\"password\">Password</label>\n\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col s12\">\n              <button className=\"btn green\">Log In<i class=\"material-icons right\">arrow_forward</i></button>&nbsp;&nbsp;&nbsp;\n              <Link className=\"btn red\" to='/'>Cancel<i class=\"material-icons right\">cancel</i></Link>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport userService from '../../services/userService';\n\nclass SignupForm extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    password: '',\n    passwordConf: ''\n  };\n\n  handleChange = (e) => {\n    this.props.updateMessage('');\n    this.setState({\n      // Using ES2015 Computed Property Names\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await userService.signup(this.state);\n      this.props.handleSignupOrLogin();\n      this.props.history.push('/');\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      this.props.updateMessage(err.message);\n    }\n  }\n\n  isFormInvalid() {\n    return !(this.state.name && this.state.email && this.state.password === this.state.passwordConf);\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Sign Up</h3>\n        <form className=\"col s12\" autocomplete=\"off\" onSubmit={this.handleSubmit} >\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"text\" autocomplete=\"off\" className=\"active\" id=\"name\" value={this.state.name} name=\"name\" onChange={this.handleChange} />\n              <label htmlFor=\"name\">Name</label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"text\" autocomplete=\"off\" className=\"active\" id=\"email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n              <label htmlFor=\"email\">Email</label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"password\" autocomplete=\"off\" className=\"active\" id=\"password\" value={this.state.password} name=\"password\" onChange={this.handleChange} />\n              <label htmlFor=\"password\">Password</label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"password\" autocomplete=\"off\" className=\"active\" id=\"confirm\" value={this.state.passwordConf} name=\"passwordConf\" onChange={this.handleChange} />\n              <label htmlFor=\"confirm\">Confirm Password</label>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12 text-center\">\n              <button className=\"btn green\" disabled={this.isFormInvalid()}>Sign Up<i class=\"material-icons right\">person_add</i></button>&nbsp;&nbsp;\n              <Link className=\"btn red\" to='/'>Cancel<i class=\"material-icons right\">cancel</i></Link>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignupForm;\n","import React, { Component } from 'react';\nimport SignupForm from '../../components/SignupForm/SignupForm';\nimport './SignupPage.css';\n\nclass SignupPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {message: ''}\n  }\n\n  updateMessage = (msg) => {\n    this.setState({message: msg});\n  }\n\n  render() {\n    return (\n      <div className='SignupPage'>\n        <SignupForm {...this.props} updateMessage={this.updateMessage} />\n        <p>{this.state.message}</p>\n      </div>\n    );\n  }\n}\n\nexport default SignupPage;","import React from 'react';\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames'\nimport styles from './Cards.module.css'\n\n\n\nconst Cards =({data: {confirmed, recovered, deaths,  lastUpdate}}) => {\n    if (!confirmed) {\n        return 'Loading...'\n    }\n    return (\n        <div className={styles.container}>\n         <Grid container spacing={3} justify=\"center\">\n         <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)} >\n             <CardContent>\n                 <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                 <Typography variant=\"h5\">\n                     <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\n                     </Typography>\n                 <Typography color=\"textSecondary\" > {new Date(lastUpdate).toDateString()} </Typography>\n                 <Typography variant=\"body2\">Number of active Cases of COVID-19</Typography>\n             </CardContent>\n             </Grid>\n             <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)} >\n             <CardContent>\n                 <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                 <Typography variant=\"h5\">\n                     <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\n                     </Typography>\n                 <Typography color=\"textSecondary\" > {new Date(lastUpdate).toDateString()} </Typography>\n                 <Typography variant=\"body2\">Number of recoveries from  COVID-19</Typography>\n             </CardContent>\n             </Grid>\n             <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)} >\n             <CardContent>\n                 <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                 <Typography variant=\"h5\">\n                     <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\n                     </Typography>\n                 <Typography color=\"textSecondary\" > {new Date(lastUpdate).toDateString()} </Typography>\n                 <Typography variant=\"body2\">Number of deaths cause by COVID-19</Typography>\n             </CardContent>\n             </Grid>\n         </Grid>\n         \n         </div>\n     )\n }\n \n export default Cards;","import axios from 'axios';\n\n\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if(country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n\n\n    try {\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\n\n        return { confirmed, recovered, deaths,lastUpdate, }\n\n       \n    } catch (error) {\n      console.log(error);\n\n    }\n}\n\n\nexport const fetchDailyData = async () => {\n    try {\n      const { data } = await axios.get(`${url}/daily`);\n\n      const modifiedData = data.map((dailyData) => ({\n        confirmed: dailyData.confirmed.total,\n        deaths: dailyData.deaths.total,\n        date: dailyData.reportDate,\n    }));\n\n    return modifiedData;\n\n  } catch (error) {\n    console.log(error);\n    }\n\n}\n\nexport const fetchCountries = async () => {\n    try {\n      const { data: { countries } } = await axios.get(`${url}/countries`);\n      return countries.map((country) => country.name);\n    } catch (error) {\n      console.log(error);\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = (\n    confirmed ? (\n      <Bar\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [\n            {\n              label: 'People',\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n              data: [confirmed.value, recovered.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n          title: { display: true, text: `Current state in ${country}` },\n        }}\n      />\n    ) : null\n  );\n\n  const lineChart = (\n    dailyData[0] ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [{\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          }, {\n            data: dailyData.map((data) => data.deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          },\n          ],\n        }}\n      />\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  );\n};\n\nexport default Chart;","import React, { useState, useEffect } from 'react';\nimport {NativeSelect, FormControl } from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\n\nimport {  fetchCountries } from '../../api';\n\nconst CountryPicker = ({ handleCountryChange }) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n        \n    useEffect(() => {\n      const fetchAPI = async () => {\n          setFetchedCountries(await fetchCountries());\n\n      }\n      fetchAPI();\n    }, [setFetchedCountries]);\n\n\n\n    return (\n       <FormControl className={styles.FormControl}>\n           <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n               <option value=\"\">Global</option>\n               {fetchedCountries.map((country, i) => <option key={i} value={country} > {country} </option>)}\n           </NativeSelect>\n       </FormControl>\n    )\n}\n\nexport default CountryPicker;","import tokenService from '../services/tokenService';\nconst BASE_URL = '/api/comments';\n\nexport function getAll() {\n  const options = {\n    method: 'GET',\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken()\n    }\n  };\n  return fetch(BASE_URL, options, {mode: \"cors\"})\n  .then(res => res.json());\n}\n\nexport function create(comment) {\n  console.log(comment)\n  return fetch(BASE_URL, {\n    method: 'POST',\n    headers: {'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken()},\n    body: JSON.stringify(comment)\n  }, {mode: \"cors\"}).then(res => res.json());\n}\n\nexport function deleteOne(idx) {\n  return fetch(`${BASE_URL}/${idx}`, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken()\n    }\n  }, {mode: \"cors\"}).then(res => res.json());\n}\n\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport userService from '../../services/userService';\n\nfunction CommentCard({comment, handleDeleteComment, user, idx}) {\n    return (\n        \n        <div className='panel panel-default'>\n            <div className=\"panel-heading\">\n                <h3 className='panel-title'>{comment.name}</h3>\n            </div>\n            <div className='panel-body'>\n                <dl>\n                    <dt>Comment</dt>\n                    <dd>{comment.name}</dd>\n                    \n                    \n                </dl>\n            </div>\n            <div className='panel-footer'>\n                \n                {comment.owner === user.name ?\n                <button\n                    className='btn btn-xs btn-danger margin-left-10'\n                    onClick={() => handleDeleteComment(comment._id, idx)}\n                >\n                    DELETE\n                </button>\n                :\n                <></>\n                }\n            </div>\n        </div>\n    )\n}\nexport default CommentCard;","import React, {Component} from 'react';\nimport './CommentListPage.css';\nimport CommentCard from '../../components/CommentsCard/CommentsCard';\nimport * as commentAPI from '../../services/comments-api'\n\n\nclass CommentListPage extends Component {\n    state = {\n        comments: []\n    }\n\n    async componentDidMount() {\n        const comments = await commentAPI.getAll();\n        this.setState({comments});\n    }\n\n    handleDeleteCat = async (id, idx) => {\n        await commentAPI.deleteOne(idx);\n        this.setState(state => ({\n            comments: state.comments.filter(c => c._id !== id)\n        }), () => this.props.history.push('/comments'));\n    }\n\n    render() {\n        return (\n            <>\n                <h1>List of comments</h1>\n                <div className='CommentListPage-grid'>\n                    {this.state.comments.map((comment, idx) =>\n                        <CommentCard\n                            key={comment._id}\n                            idx={idx}\n                            comment={comment}\n                            user={this.props.user}\n                            handleDeleteComment={this.handleDeleteComment}\n                        />\n                    )}\n                </div>\n            </>\n        )\n    }\n}\nexport default CommentListPage;","import React, {Component} from 'react';\n\nclass AddCommentPage extends Component {\n  state = {\n    invalidForm: true,\n    formData: {\n      name: '',\n     \n    }\n  };\n\n  formRef = React.createRef();\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.handleAddComment(this.state.formData);\n  };\n\n  handleChange = e => {\n    const formData = {...this.state.formData, [e.target.name]: e.target.value};\n    this.setState({\n      formData,\n      invalidForm: !this.formRef.current.checkValidity()\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <h1>Add Comment</h1>\n        <form ref={this.formRef} autoComplete=\"off\" onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label>Add your comment  (required)</label>\n            <input\n              className=\"form-control\"\n              name=\"name\"\n              value={this.state.formData.name}\n              onChange={this.handleChange}\n              required\n            />\n          </div>\n          \n          <button\n            type=\"submit\"\n            className=\"btn\"\n            disabled={this.state.invalidForm}\n          >\n            POST\n          </button>\n        </form>\n      </>\n    );\n  }\n}\nexport default AddCommentPage;","\n\n//REACT and Oauth Imports \nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom'\nimport  './App.css';\nimport NavBar from '../../components/NavBar/NavBar';\nimport LoginPage from '../LoginPage/LoginPage';\nimport SignupPage from '../SignupPage/SignupPage';\nimport userService from '../../services/userService';\n\n\n//API IMPORTS \nimport Cards from '../../components/Cards/Cards';\nimport Chart from '../../components/Chart/Chart';\nimport CountryPicker from '../../components/CountryPicker/CountryPicker' ;\nimport {fetchData } from '../../api';\nimport styles from '../../../src/App.module.css';\nimport coronaImage from '../../../src/components/images/covidimage2.png';\n\n\n\n//comment imports \n  \nimport * as commentAPI from '../../services/comments-api';\nimport CommentListPage from '../../pages/CommentListPage/CommentListPage';\nimport AddCommentpage from '../../pages/AddCommentPage/AddCommentPage';\n\n\n\n\n\n\n\nclass App extends Component {\n  state = {\n    user: userService.getUser(),\n    data: {},\n    comments: [],\n  }\n\n  handleLogout = () => {\n    userService.logout();\n    this.setState({ user: null });\n  }\n\n  handleSignupOrLogin = () => {\n    this.setState({user: userService.getUser()});\n  }\n\n\n\n\nhandleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({ data: fetchedData, country: country });\n\n}\n\n\nhandleAddComment = async newCommentData => {\n  const newComment = await commentAPI.create(newCommentData);\n  this.setState(state => ({\n    comments: [...state.comments, newComment]\n  }), () => this.props.history.push('/'));\n}\n\nhandleDeleteComment= async id => {\n  await commentAPI.deleteOne(id);\n  this.setState(state => ({\n    comments: state.comments.filter(p => p._id !== id)\n  }), () => this.props.history.push('/'));\n}\n\nasync componentDidMount() {\n  const fetchedData = await fetchData();\n  this.setState({ data: fetchedData });\n  const comments = await commentAPI.getAll();\n  this.setState({comments});\n}\n\n\n\n  render () {\n\n    const { data, country } = this.state;\n\n    return (\n      <>\n        <NavBar \n          user={this.state.user}\n          handleLogout={this.handleLogout}\n        />\n        <Route exact path='/signup' render={({ history }) => \n          <SignupPage\n            history={history}\n            handleSignupOrLogin={this.handleSignupOrLogin}\n          />\n        }/>\n        <Route exact path='/login' render={({ history }) => \n          <LoginPage\n            history={history}\n            handleSignupOrLogin={this.handleSignupOrLogin}\n          />\n        }/>\n\n\n\n      <div className={styles.container}>\n            <img className={styles.image} src={coronaImage} alt=\"Covid-19\"/>\n               <Cards data={data} />\n               <CountryPicker handleCountryChange={this.handleCountryChange} />\n               <Chart data={data}  country={country}/>\n            </div>\n\n\n\n\n\n        <Route exact path='/comments' render={({history, location}) => \n            <CommentListPage\n            comments={this.state.comments}\n            user={this.state.user}\n            history={history}\n            location={location}\n            />\n          } />\n\n\n\n          <Route exact path='/AddcommentPage' render={() => \n            <AddCommentpage\n              handleAddComment = {this.handleAddComment}\n            />\n          } />\n\n\n          \n\n          \n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          \n\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App/App';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <Route render={({history}) => <App history={history} />} />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/covidimage2.ff9e669e.png\";"],"sourceRoot":""}